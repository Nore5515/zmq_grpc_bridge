// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "bbb_go/proto";
option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

import "google/protobuf/empty.proto";

package helloworld;

// The greeting service definition.
service Greeter {
  // Send request to ZMQ, recieve response
  rpc SendZMQRequest (Request) returns (Response) {}

  // Front End request subscription
  rpc RequestSubscription (ClientDetails) returns (Response) {}

  // Handle Subscription/Unsubscription from client
  rpc HandleClientSubscription (ClientDetails) returns (Response) {}
  rpc HandleClientUnsubscription (ClientDetails) returns (Response) {}
  
  // Starts streaming data to all subscribers
  rpc StartStream (google.protobuf.Empty) returns (stream StreamData) {}
}

message Request {
  int32 id = 1;
}

message Response {
  string data = 1;
}

// Placeholder message, for now.
message ClientDetails {
  string name = 1;
}

// Data sample that will be sent
message StreamData {
  uint32 x = 1;
  uint32 y = 2;
}